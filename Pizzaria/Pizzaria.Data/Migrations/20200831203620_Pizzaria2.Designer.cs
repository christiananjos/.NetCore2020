// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pizzaria.Data;

namespace Pizzaria.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200831203620_Pizzaria2")]
    partial class Pizzaria2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pizzaria.Model.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("Varchar(200)");

                    b.Property<string>("NomeCliente")
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("NumeroCasa")
                        .HasColumnType("Varchar(20)");

                    b.Property<string>("Telefone")
                        .HasColumnType("Varchar(20)");

                    b.Property<string>("UF")
                        .HasColumnType("Char(2)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Pizzaria.Model.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descrição")
                        .HasColumnType("Varchar(150)");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("Money");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Pizzaria.Model.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtHoraPedido")
                        .HasColumnType("Datetime");

                    b.Property<string>("NomeUsuarioSistema")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.Property<decimal>("ValorFrete")
                        .HasColumnType("Money");

                    b.Property<decimal>("ValorTotalPedido")
                        .HasColumnType("Money");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Pizzaria.Model.Models.Item", b =>
                {
                    b.HasOne("Pizzaria.Model.Models.Pedido", null)
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId");
                });

            modelBuilder.Entity("Pizzaria.Model.Models.Pedido", b =>
                {
                    b.HasOne("Pizzaria.Model.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
