// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pizzaria.Data;

namespace Pizzaria.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200910185217_Pizzaria")]
    partial class Pizzaria
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pizzaria.Model.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("Varchar(200)");

                    b.Property<string>("NomeCliente")
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("NumeroCasa")
                        .HasColumnType("Varchar(20)");

                    b.Property<string>("Telefone")
                        .HasColumnType("Varchar(20)");

                    b.Property<string>("UF")
                        .HasColumnType("Char(2)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bairro = "Jd Bartira",
                            Cep = "0851000",
                            Complemento = "Bloco 6 Apto 11",
                            Estado = "São Paulo",
                            Logradouro = "Estrada Dom João Nery",
                            NomeCliente = "Christian",
                            NumeroCasa = "3551",
                            Telefone = "1199299999",
                            UF = "SP"
                        },
                        new
                        {
                            Id = 2,
                            Bairro = "Jd Bartira",
                            Cep = "0851000",
                            Complemento = "Bloco 6 Apto 11",
                            Estado = "São Paulo",
                            Logradouro = "Estrada Dom João Nery 2",
                            NomeCliente = "Douglas",
                            NumeroCasa = "3552",
                            Telefone = "1199298888",
                            UF = "SP"
                        });
                });

            modelBuilder.Entity("Pizzaria.Model.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descrição")
                        .HasColumnType("Varchar(150)");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("Money");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descrição = "3 Queijos",
                            Valor = 50m
                        },
                        new
                        {
                            Id = 2,
                            Descrição = "Frango com requeijão",
                            Valor = 59.99m
                        },
                        new
                        {
                            Id = 3,
                            Descrição = "Mussarela",
                            Valor = 42.5m
                        },
                        new
                        {
                            Id = 4,
                            Descrição = "Calabresa",
                            Valor = 42.5m
                        },
                        new
                        {
                            Id = 5,
                            Descrição = "Pepperoni",
                            Valor = 55m
                        },
                        new
                        {
                            Id = 6,
                            Descrição = "Portuguesa",
                            Valor = 45m
                        },
                        new
                        {
                            Id = 7,
                            Descrição = "Veggie",
                            Valor = 59.99m
                        },
                        new
                        {
                            Id = 8,
                            Descrição = "1/2 3 queijos + 1/2 Frango com requeijão",
                            Valor = 109.99m
                        },
                        new
                        {
                            Id = 9,
                            Descrição = "1/2 3 queijos + 1/2 Mussarela",
                            Valor = 92.5m
                        },
                        new
                        {
                            Id = 10,
                            Descrição = "1/2 3 queijos + 1/2 Calabresa",
                            Valor = 92.5m
                        },
                        new
                        {
                            Id = 11,
                            Descrição = "1/2 3 queijos + 1/2 Pepperoni",
                            Valor = 55m
                        },
                        new
                        {
                            Id = 12,
                            Descrição = "1/2 3 queijos + 1/2 Portuguesa",
                            Valor = 95m
                        },
                        new
                        {
                            Id = 13,
                            Descrição = "1/2 3 queijos + 1/2 Veggie",
                            Valor = 109.99m
                        },
                        new
                        {
                            Id = 14,
                            Descrição = "1/2 Frango com requeijão + Mussarela",
                            Valor = 102.49m
                        },
                        new
                        {
                            Id = 15,
                            Descrição = "1/2 Frango com requeijão + Calabresa",
                            Valor = 102.49m
                        },
                        new
                        {
                            Id = 16,
                            Descrição = "1/2 Frango com requeijão + Pepperoni",
                            Valor = 114.99m
                        },
                        new
                        {
                            Id = 17,
                            Descrição = "1/2 Frango com requeijão + Portuguesa",
                            Valor = 104.99m
                        },
                        new
                        {
                            Id = 18,
                            Descrição = "1/2 Frango com requeijão + Veggie",
                            Valor = 119.98m
                        },
                        new
                        {
                            Id = 19,
                            Descrição = "1/2 Mussarela + Calabresa",
                            Valor = 85m
                        },
                        new
                        {
                            Id = 20,
                            Descrição = "1/2 Mussarela + 1/2 Pepperoni",
                            Valor = 97.5m
                        },
                        new
                        {
                            Id = 21,
                            Descrição = "1/2 Mussarela + 1/2 Portuguesa",
                            Valor = 87.5m
                        },
                        new
                        {
                            Id = 22,
                            Descrição = "1/2 Mussarela + 1/2 Veggie",
                            Valor = 102.49m
                        },
                        new
                        {
                            Id = 23,
                            Descrição = "1/2 Calabresa + 1/2 Pepperoni",
                            Valor = 97.5m
                        },
                        new
                        {
                            Id = 24,
                            Descrição = "1/2 Calabresa + 1/2 Portuguesa",
                            Valor = 87.5m
                        },
                        new
                        {
                            Id = 25,
                            Descrição = "1/2 Calabresa + 1/2 Veggie",
                            Valor = 102.49m
                        },
                        new
                        {
                            Id = 26,
                            Descrição = "1/2 Pepperoni + 1/2 Portuguesa",
                            Valor = 100m
                        },
                        new
                        {
                            Id = 27,
                            Descrição = "1/2 Pepperoni + 1/2 Veggie",
                            Valor = 114.99m
                        },
                        new
                        {
                            Id = 28,
                            Descrição = "1/2 Portuguesa + 1/2 Veggie",
                            Valor = 104.99m
                        });
                });

            modelBuilder.Entity("Pizzaria.Model.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtHoraPedido")
                        .HasColumnType("Datetime");

                    b.Property<string>("NomeUsuarioSistema")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.Property<decimal>("ValorFrete")
                        .HasColumnType("Money");

                    b.Property<decimal>("ValorTotalPedido")
                        .HasColumnType("Money");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Pizzaria.Model.Models.Item", b =>
                {
                    b.HasOne("Pizzaria.Model.Models.Pedido", null)
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId");
                });

            modelBuilder.Entity("Pizzaria.Model.Models.Pedido", b =>
                {
                    b.HasOne("Pizzaria.Model.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
